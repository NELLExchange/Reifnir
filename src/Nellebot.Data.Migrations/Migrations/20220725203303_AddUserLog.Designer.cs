// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nellebot.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Nellebot.Data.Migrations.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20220725203303_AddUserLog")]
    partial class AddUserLog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nellebot.Common.Models.AwardMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AwardChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("AwardCount")
                        .HasColumnType("bigint");

                    b.Property<decimal>("AwardedMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("OriginalChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("OriginalMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("AwardedMessageId")
                        .IsUnique();

                    b.HasIndex("OriginalMessageId")
                        .IsUnique();

                    b.ToTable("AwardMessages");
                });

            modelBuilder.Entity("Nellebot.Common.Models.BotSettting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("GuildSettings");
                });

            modelBuilder.Entity("Nellebot.Common.Models.MessageRef", b =>
                {
                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("MessageId");

                    b.ToTable("MessageRefs");
                });

            modelBuilder.Entity("Nellebot.Common.Models.UserLogs.UserLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("LogType")
                        .HasColumnType("integer");

                    b.Property<string>("RawValue")
                        .HasColumnType("text")
                        .HasColumnName("Value");

                    b.Property<decimal?>("ResponsibleUserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "LogType", "Timestamp");

                    NpgsqlIndexBuilderExtensions.HasSortOrder(b.HasIndex("UserId", "LogType", "Timestamp"), new[] { SortOrder.Ascending, SortOrder.Ascending, SortOrder.Descending });

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("Nellebot.Common.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long?>("GroupNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Nellebot.Common.Models.UserRoleAlias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserRoleAliases");
                });

            modelBuilder.Entity("Nellebot.Common.Models.UserRoleAlias", b =>
                {
                    b.HasOne("Nellebot.Common.Models.UserRole", "UserRole")
                        .WithMany("UserRoleAliases")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Nellebot.Common.Models.UserRole", b =>
                {
                    b.Navigation("UserRoleAliases");
                });
#pragma warning restore 612, 618
        }
    }
}
